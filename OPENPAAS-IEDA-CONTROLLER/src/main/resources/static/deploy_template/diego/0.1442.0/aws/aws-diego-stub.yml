---
name: (( config_from_cf.cf_deployment_name "-diego" ))
director_uuid: (( config_from_cf.cf_director_uuid ))
releases: 
- (( base_releases.diego ))
- (( config_from_cf.cf_release ))
- (( base_releases.garden-linux ))
- (( base_releases.etcd ))

networks:
- name: oc_network
  type: manual
  subnets:
  - range: (( merge ))
    gateway: (( merge ))
    dns: (( merge ))
    reserved: (( merge ))
    static: (( merge ))
    cloud_properties:
      subnet: (( merge ))
      security_groups: (( merge ))

compilation:
  cloud_properties:
    instance_type: m1.medium
  network: oc_network
  reuse_compilation_vms: true
  workers: 6

jobs:
- name: database
  instances: 1
  networks:
  - name: oc_network
    static_ips: (( static_ips(0) ))
  persistent_disk: 1024
  properties:
    consul:
      agent:
        services:
          bbs: {}
          etcd: {}
    metron_agent:
      zone: z1
  resource_pool: database
  templates:
  - name: etcd
    release: (( .releases.[3].name ))
  - name: bbs
    release: (( .releases.[0].name ))
  - name: consul_agent
    release: (( .releases.[1].name ))
  - name: metron_agent
    release: (( .releases.[1].name ))
  update:
    max_in_flight: 1
    serial: true

- name: brain
  instances: 1
  networks:
  - name: oc_network
    static_ips: (( static_ips(1) ))
  properties:
    consul:
      agent:
        services:
          auctioneer: {}
    metron_agent:
      zone: z1
  resource_pool: brain
  templates:
  - name: consul_agent
    release: (( .releases.[1].name ))
  - name: auctioneer
    release: (( .releases.[0].name ))
  - name: converger
    release: (( .releases.[0].name ))
  - name: metron_agent
    release: (( .releases.[1].name ))
  update:
    max_in_flight: 1
    serial: true

- name: cell
  instances: 1
  networks:
  - name: oc_network
    static_ips: (( static_ips(2) ))
  properties:
    diego:
      rep:
        zone: z1
    metron_agent:
      zone: z1
  resource_pool: cell
  templates:
  - name: rep
    release: (( .releases.[0].name ))
  - name: consul_agent
    release: (( .releases.[1].name ))
  - name: garden
    release: (( .releases.[2].name ))
  - name: rootfses
    release: (( .releases.[0].name ))
  - name: metron_agent
    release: (( .releases.[1].name ))
  update:
    max_in_flight: 1
    serial: false

- name: cc_bridge
  instances: 1
  networks:
  - name: oc_network
    static_ips: (( static_ips(3) ))
  properties:
    consul:
      agent:
        services:
          cc_uploader: {}
          nsync: {}
          stager: {}
          tps: {}
    metron_agent:
      zone: z1
  resource_pool: cc_bridge
  templates:
  - name: stager
    release: (( .releases.[0].name ))
  - name: nsync
    release: (( .releases.[0].name ))
  - name: tps
    release: (( .releases.[0].name ))
  - name: cc_uploader
    release: (( .releases.[0].name ))
  - name: consul_agent
    release: (( .releases.[1].name ))
  - name: metron_agent
    release: (( .releases.[1].name ))
  update:
    max_in_flight: 1
    serial: false

- name: route_emitter
  instances: 1
  networks:
  - name: oc_network
    static_ips: (( static_ips(4) ))
  properties:
    metron_agent:
      zone: z1
  resource_pool: route_emitter
  templates:
  - name: route_emitter
    release: (( .releases.[0].name ))
  - name: consul_agent
    release: (( .releases.[1].name ))
  - name: metron_agent
    release: (( .releases.[1].name ))
  update:
    max_in_flight: 1
    serial: false

- name: access
  instances: 1
  networks:
  - name: oc_network
    static_ips: (( static_ips(5) ))
  properties:
    consul:
      agent:
        services:
          file_server: {}
          ssh_proxy: {}
    metron_agent:
      zone: z1
  resource_pool: access
  templates:
  - name: ssh_proxy
    release: (( .releases.[0].name ))
  - name: consul_agent
    release: (( .releases.[1].name ))
  - name: metron_agent
    release: (( .releases.[1].name ))
  - name: file_server
    release: (( .releases.[0].name ))
  update:
    max_in_flight: 1
    serial: false

properties:
  consul:
    agent:
      datacenter: (( config_from_cf.consul.datacenter ))
      domain: (( config_from_cf.consul.domain ))
      log_level: (( config_from_cf.consul.log_level ))
      servers:
        lan: (( config_from_cf.consul.lan_servers ))
    ca_cert: (( config_from_cf.consul.ca_cert ))
    agent_cert: (( config_from_cf.consul.agent_cert ))
    agent_key: (( config_from_cf.consul.agent_key ))
    encrypt_keys: (( config_from_cf.consul.encrypt_keys ))
    server_cert: (( config_from_cf.consul.server_cert ))
    server_key: (( config_from_cf.consul.server_key ))

  diego:
    auctioneer:
      bbs:
        api_location: bbs.service.cf.internal:8889
        ca_cert: (( diego-certs.bbs-ca-cert ))
        client_cert: (( diego-certs.bbs-client-cert ))
        client_key: (( diego-certs.bbs-client-key ))
        client_session_cache_size: null
        max_idle_conns_per_host: null
        require_ssl: true
      cell_state_timeout: null
      log_level: null
    bbs:
      active_key_label: key1
      auctioneer:
        api_url: http://auctioneer.service.cf.internal:9016
      ca_cert: (( .properties.diego.auctioneer.bbs.ca_cert ))
      encryption_keys:
      - label: key1
        passphrase: (( diego-certs.bbs-encrypt-keys ))
      etcd:
        ca_cert: (( diego.auctioneer.bbs.ca_cert ))
        client_cert: (( .properties.etcd.client_cert ))
        client_key: (( .properties.etcd.client_key ))
        client_session_cache_size: null
        machines:
        - etcd.service.cf.internal
        max_idle_conns_per_host: null
        require_ssl: true
      log_level: null
      require_ssl: true
      server_cert: (( diego-certs.bbs-server-cert ))
      server_key: (( diego-certs.bbs-server-key ))
    cc_uploader:
      cc:
        base_url: (( config_from_cf.cc.srv_api_uri ))
        basic_auth_username: (( config_from_cf.cc.internal_api_user ))
        basic_auth_password: (( config_from_cf.cc.internal_api_password ))
        staging_upload_password: (( basic_auth_password ))
        staging_upload_user: staging_upload_user
      log_level: null
      dropsonde_port: (( config_from_cf.metron_agent.dropsonde_incoming_port ))
    converger:
      bbs:
        api_location: bbs.service.cf.internal:8889
        ca_cert: (( .properties.diego.auctioneer.bbs.ca_cert ))
        client_cert: (( .properties.diego.auctioneer.bbs.client_cert ))
        client_key: (( .properties.diego.auctioneer.bbs.client_key ))
        client_session_cache_size: null
        max_idle_conns_per_host: null
        require_ssl: true
      log_level: debug
    executor:
      disk_capacity_mb: null
      drain_timeout_in_seconds: 0
      garden:
        address: 127.0.0.1:7777
        network: tcp
      log_level: debug
      memory_capacity_mb: null
    file_server:
      log_level: null
    nsync:
      bbs:
        api_location: bbs.service.cf.internal:8889
        ca_cert: (( .properties.diego.auctioneer.bbs.ca_cert ))
        client_cert: (( .properties.diego.auctioneer.bbs.client_cert ))
        client_key: (( .properties.diego.auctioneer.bbs.client_key ))
        client_session_cache_size: null
        max_idle_conns_per_host: null
        require_ssl: true
      cc:
        base_url: (( cc_uploader.cc.base_url ))
        basic_auth_password: (( cc_uploader.cc.basic_auth_password ))
        staging_upload_password: (( cc_uploader.cc.staging_upload_password ))
        staging_upload_user: (( cc_uploader.cc.staging_upload_user ))
      log_level: debug
    rep:
      bbs:
        api_location: bbs.service.cf.internal:8889
        ca_cert: (( .properties.diego.auctioneer.bbs.ca_cert ))
        client_cert: (( .properties.diego.auctioneer.bbs.client_cert ))
        client_key: (( .properties.diego.auctioneer.bbs.client_key ))
        client_session_cache_size: null
        max_idle_conns_per_host: null
        require_ssl: true
      evacuation_timeout_in_seconds: 60
      log_level: debug
    route_emitter:
      bbs:
        api_location: bbs.service.cf.internal:8889
        ca_cert: (( .properties.diego.auctioneer.bbs.ca_cert ))
        client_cert: (( .properties.diego.auctioneer.bbs.client_cert ))
        client_key: (( .properties.diego.auctioneer.bbs.client_key ))
        client_session_cache_size: null
        max_idle_conns_per_host: null
        require_ssl: true
      log_level: debug
      nats:
        machines: (( .properties.nats.machines ))
        password: (( .properties.nats.password ))
        port: (( .properties.nats.port ))
        user: (( .properties.nats.user ))
    ssh_proxy:
      bbs:
        api_location: bbs.service.cf.internal:8889
        ca_cert: (( .properties.diego.auctioneer.bbs.ca_cert ))
        client_cert: (( .properties.diego.auctioneer.bbs.client_cert ))
        client_key: (( .properties.diego.auctioneer.bbs.client_key ))
        client_session_cache_size: null
        max_idle_conns_per_host: null
        require_ssl: true
      diego_credentials: (( meta.diego-credentials || "ssh-secret" ))
      enable_cf_auth: true
      enable_diego_auth: false
      host_key: (( diego-certs.ssh-proxy-key ))
      servers: (( jobs.access.networks.oc_network.static_ips ))
      uaa_secret: (( config_from_cf.uaa.ssh_proxy_client_secret ))
      uaa_token_url: (( config_from_cf.uaa.token_url ))
    ssl:
      skip_cert_verify: true
    stager:
      bbs:
        api_location: bbs.service.cf.internal:8889
        ca_cert: (( .properties.diego.auctioneer.bbs.ca_cert ))
        client_cert: (( .properties.diego.auctioneer.bbs.client_cert ))
        client_key: (( .properties.diego.auctioneer.bbs.client_key ))
        client_session_cache_size: null
        max_idle_conns_per_host: null
        require_ssl: true
      cc:
        base_url: (( cc_uploader.cc.base_url ))
        basic_auth_password: (( cc_uploader.cc.basic_auth_password ))
        staging_upload_password: (( cc_uploader.cc.staging_upload_password ))
        staging_upload_user: (( cc_uploader.cc.staging_upload_user ))
      insecure_docker_registry_list: null
      log_level: null
    tps:
      bbs:
        api_location: bbs.service.cf.internal:8889
        ca_cert: (( .properties.diego.auctioneer.bbs.ca_cert ))
        client_cert: (( .properties.diego.auctioneer.bbs.client_cert ))
        client_key: (( .properties.diego.auctioneer.bbs.client_key ))
        client_session_cache_size: null
        max_idle_conns_per_host: null
        require_ssl: true
      cc:
        base_url: (( cc_uploader.cc.base_url ))
        basic_auth_password: (( cc_uploader.cc.basic_auth_password ))
        staging_upload_password: (( cc_uploader.cc.staging_upload_password ))
        staging_upload_user: (( cc_uploader.cc.staging_upload_user ))
      log_level: null
      traffic_controller_url: (( config_from_cf.loggregator.traffic_controller_url ))
  etcd:
    ca_cert: (( diego-certs.etcd-ca-cert ))
    client_cert: (( diego-certs.etcd-client-cert ))
    client_key: (( diego-certs.etcd-client-key ))
    cluster:
    - instances: 1
      name: database
    - instances: 0
      name: colocated
    election_timeout_in_milliseconds: null
    heartbeat_interval_in_milliseconds: null
    machines:
    - etcd.service.cf.internal
    peer_ca_cert: (( diego-certs.peer-ca-cert ))
    peer_cert: (( diego-certs.peer-cert ))
    peer_key: (( diego-certs.peer-key ))
    peer_require_ssl: true
    require_ssl: true
    server_cert: (( diego-certs.etcd-server-cert ))
    server_key: (( diego-certs.etcd-server-key ))
  garden:
    allow_host_access: null
    allow_networks: null
    deny_networks:
    - 0.0.0.0/0
    disk_quota_enabled: null
    enable_graph_cleanup: true
    insecure_docker_registry_list: null
    listen_address: 0.0.0.0:7777
    listen_network: tcp
    log_level: debug
    mount_btrfs_loopback: null
    network_mtu: null
    persistent_image_list:
    - /var/vcap/packages/rootfs_cflinuxfs2/rootfs
  loggregator:
    etcd:
      machines: (( config_from_cf.loggregator.etcd_machines ))
  loggregator_endpoint:
    shared_secret: (( config_from_cf.metron_endpoint.shared_secret ))
  metron_agent:
    deployment: (( name ))
  metron_endpoint:
    shared_secret: (( config_from_cf.metron_endpoint.shared_secret ))
  nats:
    machines: (( config_from_cf.nats.machines ))
    user: (( config_from_cf.nats.user ))
    password: (( config_from_cf.nats.password ))
    port: (( config_from_cf.nats.port ))
  syslog_daemon_config:
    address: null
    port: null

resource_pools:
- name: access
  cloud_properties:
    instance_type: (( merge || "m1.small" ))
  network: oc_network
  stemcell:
    name: (( merge ))
    version: (( merge || "latest" ))
  env:
    bosh:
      password: (( merge ))

- name: brain
  cloud_properties:
    instance_type: (( merge || "m1.small" ))
  network: oc_network
  stemcell:
    name: (( .resource_pools.access.stemcell.name ))
    version: (( .resource_pools.access.stemcell.version ))
  env:
    bosh:
      password: (( .resource_pools.access.env.bosh.password ))

- name: cc_bridge
  cloud_properties:
    instance_type: (( merge || "m1.small" ))
  network: oc_network
  stemcell:
    name: (( .resource_pools.access.stemcell.name ))
    version: (( .resource_pools.access.stemcell.version ))
  env:
    bosh:
      password: (( .resource_pools.access.env.bosh.password ))

- name: cell
  cloud_properties:
    instance_type: (( merge || "m1.large" ))
  network: oc_network
  stemcell:
    name: (( .resource_pools.access.stemcell.name ))
    version: (( .resource_pools.access.stemcell.version ))
  env:
    bosh:
      password: (( .resource_pools.access.env.bosh.password ))

- name: database
  cloud_properties:
    instance_type: (( merge || "m1.small" ))
  network: oc_network
  stemcell:
    name: (( .resource_pools.access.stemcell.name ))
    version: (( .resource_pools.access.stemcell.version ))
  env:
    bosh:
      password: (( .resource_pools.access.env.bosh.password ))

- name: route_emitter
  cloud_properties:
    instance_type: (( merge || "m1.small" ))
  network: oc_network
  stemcell:
    name: (( .resource_pools.access.stemcell.name ))
    version: (( .resource_pools.access.stemcell.version ))
  env:
    bosh:
      password: (( .resource_pools.access.env.bosh.password ))

update:
  canaries: 1
  canary_watch_time: 5000-120000
  max_in_flight: 1
  serial: false
  update_watch_time: 5000-120000

config_from_cf: ~
diego-certs: ~

base_releases: ~
