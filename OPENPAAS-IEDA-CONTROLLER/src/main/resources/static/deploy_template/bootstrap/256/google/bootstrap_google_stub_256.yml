meta: ~

releases:
- name: bosh
  url: (( meta.bosh-release-url ))
- name: (( meta.cpi-release ))
  url: (( meta.bosh-cpi-release-url ))

resource_pools:
- name: vms
  cloud_properties:
    zone: (( meta.zone ))
    machine_type: (( meta.instance-type ))
    root_disk_size_gb: 20
    root_disk_type: pd-ssd
disk_pools:
- name: disks
  disk_size: 24_576
  <<: (( merge ))

networks:
- name: private
  type: manual
  subnets:
  - range: (( meta.private-network-range ))
    gateway: (( meta.private-network-gateway ))
    dns: (( meta.private-network-dns ))

    cloud_properties:
      network_name: (( meta.network-name ))
      ephemeral_external_ip: true
      subnetwork_name: (( meta.private-subnet-name ))
      tags: (( meta.tags ))
- name: public
  type: vip

jobs:
  bosh:
    templates:  
    - {name: (( meta.cpi-name )), release: (( meta.cpi-release ))}
    - {name: registry, release: bosh}
    
    networks:
    - name: private
      static_ips: (( meta.private-static-ips ))
      default: [dns, gateway]
    - name: public
      static_ips: (( meta.public-static-ips ))

    properties:
      google: &google_properties
        project: (( meta.project ))
        json_key: 
         (( meta.json-key ))
        default_root_disk_size_gb: 20
        default_root_disk_type: pd-ssd

      ntp: &ntp (( meta.ntp ))

      postgres: &db
        listen_address: 127.0.0.1
        host: 127.0.0.1
        user: postgres
        password: postgres-password
        database: bosh
        adapter: postgres

      registry:
        address: (( meta.private-static-ips.[0] ))
        host: (( meta.private-static-ips.[0] ))
        db: *db
        http: {user: admin, password: admin, port: 25777}
        username: admin
        password: admin
        port: 25777

      director:
        max_threads: 14
        max_threads: 3
        enable_snapshots: (( meta.enable-snapshots || "false" ))
        snapshot_schedule: (( meta.snapshot-schedule || nil ))

cloud_provider:
  properties:
    google: *google_properties
    ntp: *ntp
    ssh_tunnel:
      host: (( meta.public-static-ips.[0] ))
      port: 22
      user: vcap
      private_key: (( meta.private-key ))
